-- Function extensionality
id1 : T -> T
id1 := \a. a

id2 : T -> T
id2 := \b. b

id1PointwiseEqualsId2 : (a : T) -> id1 a = id2 a
id1PointwiseEqualsId2 := \c. refl[c]

#check funext(id1PointwiseEqualsId2)

homotopic : {A : U} -> {B : U} -> (f : A -> B) -> (g : A -> B) -> U
homotopic := \f. \g. (a : A) -> f a = g a

#check homotopic id1 id2

ishae : {A : U} -> {B : U} -> (f : A -> B) -> (g : B -> A) x (eta : homotopic (comp f g) (id {B})) x (eps : homotopic (comp g f) (id {A})) x ((a : A) -> U)
-- Define ishae

#type ishae
