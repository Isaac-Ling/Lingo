-- Function extensionality
id1 : T -> T
id1 := \a. a

id2 : T -> T
id2 := \b. b

id1PointwiseEqualsId2 : (a : T) -> id1 a = id2 a
id1PointwiseEqualsId2 := \c. refl[c]

id1EqualsId2 : id1 = id2
id1EqualsId2 := funext(id1PointwiseEqualsId2)

#check id1EqualsId2

homotopic : {A : U} -> {B : U} -> (f : A -> B) -> (g : A -> B) -> U
homotopic := \f. \g. (a : A) -> f a = g a

#check homotopic id1 id2

dhomotopic : {A : U} -> {P : A -> U} -> (f : (a : A) -> P a) -> (g : (a : A) -> P a) -> U
dhomotopic := \f. \g. (a : A) -> f a = g a

-- Homotopy equivalence relation
homotopyRefl : {A : U} -> {P : A -> U} -> (f : (a : A) -> P a) -> dhomotopic f f
homotopyRefl := \f. \a. refl[f a]

#check homotopyRefl

homotopySymm : {A : U} -> {P : A -> U} -> (f : (a : A) -> P a) -> (g : (a : A) -> P a) -> dhomotopic f g -> dhomotopic g f
homotopySymm := \f. \g. \hfg. \a. idSymm (hfg a)

#check homotopySymm

homotopyTrans : {A : U} -> {P : A -> U} -> (f : (a : A) -> P a) -> (g : (a : A) -> P a) -> (h : (a : A) -> P a) -> dhomotopic f g -> dhomotopic g h -> dhomotopic f h
homotopyTrans := \f. \g. \h. \hfg. \hgh. \a. idTrans (hfg a) (hgh a)

#check homotopyTrans

-- Quasi-inverse
qinv : {A : U} -> {B : U} -> (f : A -> B) -> U
qinv := \f. (g : B -> A) x (homotopic (comp f g) id) x (homotopic (comp g f) id)

#eval qinv

-- TODO: Unification hangs if {A} removed from id in type
idSelfInverse : {A : U} -> qinv (id {A})
idSelfInverse := (id, \a. refl[a], \a. refl[a])

#check idSelfInverse

unsatisfiable : {A : U} -> Nat -> Nat
unsatisfiable := \a. succ(a)

-- TODO: Unsolved metas will continue past the term, so will need a global meta
-- state available to other terms too
#check unsatisfiable 3
